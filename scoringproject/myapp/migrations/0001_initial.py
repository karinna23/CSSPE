# Generated by Django 4.0 on 2024-10-27 13:04

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArnisFormPlayers',
            fields=[
                ('playerID', models.AutoField(primary_key=True, serialize=False)),
                ('player_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='ArnisJudge',
            fields=[
                ('judgeID', models.AutoField(primary_key=True, serialize=False)),
                ('judge_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='ArnisLabananPlayers',
            fields=[
                ('playerID', models.AutoField(primary_key=True, serialize=False)),
                ('player_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='ArnisManager',
            fields=[
                ('managerID', models.AutoField(primary_key=True, serialize=False)),
                ('manager_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='ArnisRecorder',
            fields=[
                ('recorderID', models.AutoField(primary_key=True, serialize=False)),
                ('recorder_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='ArnisReferee',
            fields=[
                ('refereeID', models.AutoField(primary_key=True, serialize=False)),
                ('referee_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='ArnisTabulator',
            fields=[
                ('tabulatorID', models.AutoField(primary_key=True, serialize=False)),
                ('tabulator_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='ArnisTimer',
            fields=[
                ('timerID', models.AutoField(primary_key=True, serialize=False)),
                ('timer_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('collegeID', models.AutoField(primary_key=True, serialize=False)),
                ('college_abb', models.CharField(max_length=100)),
                ('college_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='DoubleTennisMatch',
            fields=[
                ('matchID', models.AutoField(primary_key=True, serialize=False)),
                ('group', models.CharField(blank=True, max_length=100)),
                ('table', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('match_no', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('time', models.CharField(blank=True, max_length=100, null=True)),
                ('stage', models.CharField(blank=True, max_length=100, null=True)),
                ('player1_timeout', models.IntegerField(blank=True, null=True)),
                ('player2_timeout', models.IntegerField(blank=True, null=True)),
                ('winning_team', models.CharField(blank=True, max_length=100)),
                ('losing_team', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FormMatch',
            fields=[
                ('formID', models.AutoField(primary_key=True, serialize=False)),
                ('form_type', models.CharField(blank=True, max_length=255, null=True)),
                ('form_no', models.IntegerField(blank=True, null=True)),
                ('venue', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('division', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('preference', models.CharField(blank=True, max_length=255, null=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manager_matches', to='myapp.arnismanager')),
                ('tabulator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tabulator_matches', to='myapp.arnistabulator')),
                ('timer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timer_matches', to='myapp.arnistimer')),
            ],
        ),
        migrations.CreateModel(
            name='LabananMatch',
            fields=[
                ('matchID', models.AutoField(primary_key=True, serialize=False)),
                ('match_no', models.IntegerField(blank=True, null=True)),
                ('event', models.CharField(blank=True, max_length=255, null=True)),
                ('venue', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('division', models.CharField(blank=True, max_length=255, null=True)),
                ('weight_category', models.CharField(blank=True, max_length=255, null=True)),
                ('area', models.CharField(blank=True, max_length=255, null=True)),
                ('final_winner', models.CharField(blank=True, max_length=255, null=True)),
                ('blue_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blue_player_matches', to='myapp.arnislabananplayers')),
                ('blue_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blue_team_matches', to='myapp.college')),
                ('judge1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='judge1_matches', to='myapp.arnisjudge')),
                ('judge2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='judge2_matches', to='myapp.arnisjudge')),
                ('judge3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='judge3_matches', to='myapp.arnisjudge')),
                ('recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recorder_matches', to='myapp.arnisrecorder')),
                ('red_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='red_player_matches', to='myapp.arnislabananplayers')),
                ('red_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='red_team_matches', to='myapp.college')),
                ('referee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referee_matches', to='myapp.arnisreferee')),
            ],
        ),
        migrations.CreateModel(
            name='LabananRound',
            fields=[
                ('roundID', models.AutoField(primary_key=True, serialize=False)),
                ('round_num', models.IntegerField(blank=True, null=True)),
                ('time', models.CharField(blank=True, max_length=50, null=True)),
                ('winner', models.CharField(blank=True, max_length=100, null=True)),
                ('matchID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.labananmatch')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('YearID', models.AutoField(primary_key=True, serialize=False)),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SingleTennisMatch',
            fields=[
                ('matchID', models.AutoField(primary_key=True, serialize=False)),
                ('group', models.CharField(blank=True, max_length=100)),
                ('table', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('match_no', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('time', models.CharField(blank=True, max_length=100, null=True)),
                ('stage', models.CharField(blank=True, max_length=100, null=True)),
                ('player1_timeout', models.IntegerField(blank=True, null=True)),
                ('player2_timeout', models.IntegerField(blank=True, null=True)),
                ('winning_team', models.CharField(blank=True, max_length=100)),
                ('losing_team', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='VolleyballJudge',
            fields=[
                ('judgeID', models.AutoField(primary_key=True, serialize=False)),
                ('judge_name', models.CharField(max_length=150)),
                ('yearID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear')),
            ],
        ),
        migrations.CreateModel(
            name='VolleyballMatch',
            fields=[
                ('matchID', models.AutoField(primary_key=True, serialize=False)),
                ('event', models.CharField(blank=True, max_length=100)),
                ('place', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('match_no', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('start', models.TimeField(blank=True, null=True)),
                ('finish', models.TimeField(blank=True, null=True)),
                ('home_team_timeout', models.CharField(blank=True, max_length=100)),
                ('away_team_timeout', models.CharField(blank=True, max_length=100)),
                ('winning_team', models.CharField(blank=True, max_length=100)),
                ('losing_team', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='VolleyballTeam',
            fields=[
                ('teamID', models.AutoField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=150)),
                ('collegeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.college')),
                ('yearID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear')),
            ],
        ),
        migrations.CreateModel(
            name='VolleyballSet',
            fields=[
                ('setID', models.AutoField(primary_key=True, serialize=False)),
                ('set_no', models.IntegerField(blank=True, null=True)),
                ('time', models.CharField(blank=True, max_length=100, null=True)),
                ('winner', models.CharField(blank=True, max_length=100, null=True)),
                ('matchID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.volleyballmatch')),
            ],
        ),
        migrations.CreateModel(
            name='VolleyballScorer',
            fields=[
                ('scorerID', models.AutoField(primary_key=True, serialize=False)),
                ('scorer_name', models.CharField(max_length=150)),
                ('yearID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear')),
            ],
        ),
        migrations.CreateModel(
            name='VolleyballScore',
            fields=[
                ('scoreID', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('setID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.volleyballset')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team', to='myapp.volleyballteam')),
            ],
        ),
        migrations.CreateModel(
            name='VolleyballReferee',
            fields=[
                ('refereeID', models.AutoField(primary_key=True, serialize=False)),
                ('referee_name', models.CharField(max_length=150)),
                ('yearID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear')),
            ],
        ),
        migrations.CreateModel(
            name='VolleyballPlayer',
            fields=[
                ('playerID', models.AutoField(primary_key=True, serialize=False)),
                ('player_name', models.CharField(max_length=150)),
                ('player_role', models.CharField(max_length=150)),
                ('teamID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.volleyballteam')),
            ],
        ),
        migrations.CreateModel(
            name='VolleyballMatchPlayers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.CharField(blank=True, max_length=100, null=True)),
                ('team', models.CharField(blank=True, max_length=100, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('matchID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.volleyballmatch')),
            ],
        ),
        migrations.AddField(
            model_name='volleyballmatch',
            name='away_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='away_team', to='myapp.volleyballteam'),
        ),
        migrations.AddField(
            model_name='volleyballmatch',
            name='home_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home_team', to='myapp.volleyballteam'),
        ),
        migrations.AddField(
            model_name='volleyballmatch',
            name='line_judge1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='judged_matches1', to='myapp.volleyballjudge'),
        ),
        migrations.AddField(
            model_name='volleyballmatch',
            name='line_judge2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='judged_matches2', to='myapp.volleyballjudge'),
        ),
        migrations.AddField(
            model_name='volleyballmatch',
            name='referee1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refereed_matches1', to='myapp.volleyballreferee'),
        ),
        migrations.AddField(
            model_name='volleyballmatch',
            name='referee2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refereed_matches2', to='myapp.volleyballreferee'),
        ),
        migrations.AddField(
            model_name='volleyballmatch',
            name='scorer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scored_matches', to='myapp.volleyballscorer'),
        ),
        migrations.AddField(
            model_name='volleyballmatch',
            name='yearID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.CreateModel(
            name='TennisUmpire',
            fields=[
                ('umpireID', models.AutoField(primary_key=True, serialize=False)),
                ('umpire_name', models.CharField(max_length=150)),
                ('yearID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear')),
            ],
        ),
        migrations.CreateModel(
            name='TennisPlayers',
            fields=[
                ('playerID', models.AutoField(primary_key=True, serialize=False)),
                ('player_name', models.CharField(max_length=150)),
                ('collegeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.college')),
                ('yearID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear')),
            ],
        ),
        migrations.CreateModel(
            name='TennisCoach',
            fields=[
                ('coachID', models.AutoField(primary_key=True, serialize=False)),
                ('coach_name', models.CharField(max_length=150)),
                ('yearID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear')),
            ],
        ),
        migrations.CreateModel(
            name='SingleTennisSet',
            fields=[
                ('setID', models.AutoField(primary_key=True, serialize=False)),
                ('set_no', models.IntegerField(blank=True, null=True)),
                ('winner', models.CharField(blank=True, max_length=100, null=True)),
                ('matchID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.singletennismatch')),
            ],
        ),
        migrations.CreateModel(
            name='SingleTennisScore',
            fields=[
                ('scoreID', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player', to='myapp.tennisplayers')),
                ('setID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.singletennisset')),
            ],
        ),
        migrations.AddField(
            model_name='singletennismatch',
            name='coach1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coach1', to='myapp.tenniscoach'),
        ),
        migrations.AddField(
            model_name='singletennismatch',
            name='coach2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coach2', to='myapp.tenniscoach'),
        ),
        migrations.AddField(
            model_name='singletennismatch',
            name='player1_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player1', to='myapp.tennisplayers'),
        ),
        migrations.AddField(
            model_name='singletennismatch',
            name='player2_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player2', to='myapp.tennisplayers'),
        ),
        migrations.AddField(
            model_name='singletennismatch',
            name='umpire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='umpire', to='myapp.tennisumpire'),
        ),
        migrations.AddField(
            model_name='singletennismatch',
            name='yearID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.CreateModel(
            name='LabananScore',
            fields=[
                ('scoreID', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField(blank=True, default=0, null=True)),
                ('foul', models.IntegerField(blank=True, default=0, null=True)),
                ('disarmed', models.IntegerField(blank=True, default=0, null=True)),
                ('total_score', models.IntegerField(blank=True, default=0, null=True)),
                ('playerID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.arnislabananplayers')),
                ('roundID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.labananround')),
            ],
        ),
        migrations.AddField(
            model_name='labananmatch',
            name='yearID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.CreateModel(
            name='FormPlayers',
            fields=[
                ('formplayersID', models.AutoField(primary_key=True, serialize=False)),
                ('judgeScores1', models.IntegerField(blank=True, default=0, null=True)),
                ('judgeScores2', models.IntegerField(blank=True, default=0, null=True)),
                ('judgeScores3', models.IntegerField(blank=True, default=0, null=True)),
                ('judgeScores4', models.IntegerField(blank=True, default=0, null=True)),
                ('judgeScores5', models.IntegerField(blank=True, default=0, null=True)),
                ('time', models.CharField(blank=True, default=0, max_length=255, null=True)),
                ('lost_control', models.IntegerField(blank=True, default=0, null=True)),
                ('outside', models.CharField(blank=True, default=0, max_length=255, null=True)),
                ('other', models.IntegerField(blank=True, default=0, null=True)),
                ('time_consumed', models.CharField(blank=True, max_length=255, null=True)),
                ('rank', models.IntegerField(blank=True, default=0, null=True)),
                ('total_score', models.FloatField(blank=True, default=0, null=True)),
                ('formID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.formmatch')),
                ('playerID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.arnisformplayers')),
            ],
        ),
        migrations.AddField(
            model_name='formmatch',
            name='yearID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.CreateModel(
            name='DoubleTennisSet',
            fields=[
                ('setID', models.AutoField(primary_key=True, serialize=False)),
                ('set_no', models.IntegerField(blank=True, null=True)),
                ('winner', models.CharField(blank=True, max_length=100, null=True)),
                ('matchID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.doubletennismatch')),
            ],
        ),
        migrations.CreateModel(
            name='DoubleTennisScore',
            fields=[
                ('scoreID', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='double_player', to='myapp.tennisplayers')),
                ('setID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.doubletennisset')),
            ],
        ),
        migrations.AddField(
            model_name='doubletennismatch',
            name='coach1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doubles_coach1', to='myapp.tenniscoach'),
        ),
        migrations.AddField(
            model_name='doubletennismatch',
            name='coach2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doubles_coach2', to='myapp.tenniscoach'),
        ),
        migrations.AddField(
            model_name='doubletennismatch',
            name='player1_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='double_player1', to='myapp.tennisplayers'),
        ),
        migrations.AddField(
            model_name='doubletennismatch',
            name='player2_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='double_player2', to='myapp.tennisplayers'),
        ),
        migrations.AddField(
            model_name='doubletennismatch',
            name='player3_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='double_player3', to='myapp.tennisplayers'),
        ),
        migrations.AddField(
            model_name='doubletennismatch',
            name='player4_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='double_player4', to='myapp.tennisplayers'),
        ),
        migrations.AddField(
            model_name='doubletennismatch',
            name='umpire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doubles_umpire', to='myapp.tennisumpire'),
        ),
        migrations.AddField(
            model_name='doubletennismatch',
            name='yearID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.AddField(
            model_name='arnistimer',
            name='yearID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.AddField(
            model_name='arnistabulator',
            name='yearID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.AddField(
            model_name='arnisreferee',
            name='yearID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.AddField(
            model_name='arnisrecorder',
            name='yearID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.AddField(
            model_name='arnismanager',
            name='yearID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.AddField(
            model_name='arnislabananplayers',
            name='collegeID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.college'),
        ),
        migrations.AddField(
            model_name='arnislabananplayers',
            name='yearID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.AddField(
            model_name='arnisjudge',
            name='yearID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.AddField(
            model_name='arnisformplayers',
            name='collegeID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.college'),
        ),
        migrations.AddField(
            model_name='arnisformplayers',
            name='yearID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.schoolyear'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userID', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('sport', models.CharField(choices=[('arnis', 'Arnis'), ('volleyball', 'Volleyball'), ('table_tennis', 'Table Tennis')], max_length=20)),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('is_superuser', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
